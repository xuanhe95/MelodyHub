{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/albums/MusicList.js\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography, Divider, Box } from '@mui/material';\n\n// 音乐列表数据\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst musicList = [{\n  title: 'Song 1',\n  artist: 'Artist 1',\n  album: 'Album 1',\n  duration: '3:45'\n}, {\n  title: 'Song 2',\n  artist: 'Artist 2',\n  album: 'Album 2',\n  duration: '4:20'\n}, {\n  title: 'Song 3',\n  artist: 'Artist 3',\n  album: 'Album 3',\n  duration: '2:58'\n}];\nconst MusicList = () => {\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      dense: true,\n      children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 20\n        }, this),\n        secondary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: \"Artist \\u2014 Album \\u2014 Duration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), musicList.map((music, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        dense: true,\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: music.title,\n            src: \"/path/to/music-avatar.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: music.title,\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            variant: \"body2\",\n            color: \"textPrimary\",\n            children: [music.artist, \" \\u2014 \", music.album, \" \\u2014 \", music.duration]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), index < musicList.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        component: \"li\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 44\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MusicList;\nexport default MusicList;\nvar _c;\n$RefreshReg$(_c, \"MusicList\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","Divider","Box","jsxDEV","_jsxDEV","musicList","title","artist","album","duration","MusicList","children","dense","fileName","_jsxFileName","lineNumber","columnNumber","primary","variant","secondary","map","music","index","Fragment","alignItems","alt","src","component","color","length","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/albums/MusicList.js"],"sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography, Divider, Box } from '@mui/material';\n\n// 音乐列表数据\nconst musicList = [\n  { title: 'Song 1', artist: 'Artist 1', album: 'Album 1', duration: '3:45' },\n  { title: 'Song 2', artist: 'Artist 2', album: 'Album 2', duration: '4:20' },\n  { title: 'Song 3', artist: 'Artist 3', album: 'Album 3', duration: '2:58' },\n];\n\nconst MusicList = () => {\n  return (\n    <List>\n      {/* 表头 */}\n      <ListItem dense>\n        <ListItemAvatar>\n          <Avatar />\n        </ListItemAvatar>\n        <ListItemText\n          primary={<Typography variant=\"subtitle1\">Title</Typography>}\n          secondary={\n            <Typography variant=\"body2\">\n              Artist — Album — Duration\n            </Typography>\n          }\n        />\n      </ListItem>\n      {/* 音乐列表 */}\n      {musicList.map((music, index) => (\n        <React.Fragment key={index}>\n          <ListItem dense alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar alt={music.title} src=\"/path/to/music-avatar.jpg\" />\n            </ListItemAvatar>\n            <ListItemText\n              primary={music.title}\n              secondary={\n                <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n                  {music.artist} — {music.album} — {music.duration}\n                </Typography>\n              }\n            />\n          </ListItem>\n          {index < musicList.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n\nexport default MusicList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}