{"ast":null,"code":"/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = number => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = number => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = number => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = count => {\n  if (count < 2) return {\n    label: 'Poor',\n    color: value.errorMain\n  };\n  if (count < 3) return {\n    label: 'Weak',\n    color: value.warningDark\n  };\n  if (count < 4) return {\n    label: 'Normal',\n    color: value.orangeMain\n  };\n  if (count < 5) return {\n    label: 'Good',\n    color: value.successMain\n  };\n  if (count < 6) return {\n    label: 'Strong',\n    color: value.successDark\n  };\n  return {\n    label: 'Poor',\n    color: value.errorMain\n  };\n};\n\n// password strength indicator\nexport const strengthIndicator = number => {\n  let strengths = 0;\n  if (number.length > 5) strengths += 1;\n  if (number.length > 7) strengths += 1;\n  if (hasNumber(number)) strengths += 1;\n  if (hasSpecial(number)) strengths += 1;\n  if (hasMixed(number)) strengths += 1;\n  return strengths;\n};","map":{"version":3,"names":["value","hasNumber","number","RegExp","test","hasMixed","hasSpecial","strengthColor","count","label","color","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","strengths","length"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/utils/password-strength.js"],"sourcesContent":["/**\n * Password validator for login pages\n */\nimport value from 'assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\n\n// has mix of small and capitals\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\n\n// has special chars\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n  if (count < 2) return { label: 'Poor', color: value.errorMain };\n  if (count < 3) return { label: 'Weak', color: value.warningDark };\n  if (count < 4) return { label: 'Normal', color: value.orangeMain };\n  if (count < 5) return { label: 'Good', color: value.successMain };\n  if (count < 6) return { label: 'Strong', color: value.successDark };\n  return { label: 'Poor', color: value.errorMain };\n};\n\n// password strength indicator\nexport const strengthIndicator = (number) => {\n  let strengths = 0;\n  if (number.length > 5) strengths += 1;\n  if (number.length > 7) strengths += 1;\n  if (hasNumber(number)) strengths += 1;\n  if (hasSpecial(number)) strengths += 1;\n  if (hasMixed(number)) strengths += 1;\n  return strengths;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,sCAAsC;;AAExD;AACA,MAAMC,SAAS,GAAIC,MAAM,IAAK,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;;AAE9D;AACA,MAAMG,QAAQ,GAAIH,MAAM,IAAK,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC,IAAI,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;;AAEjG;AACA,MAAMI,UAAU,GAAIJ,MAAM,IAAK,IAAIC,MAAM,CAAC,mBAAmB,CAAC,CAACC,IAAI,CAACF,MAAM,CAAC;;AAE3E;AACA,OAAO,MAAMK,aAAa,GAAIC,KAAK,IAAK;EACtC,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAEV,KAAK,CAACW;EAAU,CAAC;EAC/D,IAAIH,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAEV,KAAK,CAACY;EAAY,CAAC;EACjE,IAAIJ,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAEV,KAAK,CAACa;EAAW,CAAC;EAClE,IAAIL,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAEV,KAAK,CAACc;EAAY,CAAC;EACjE,IAAIN,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAEV,KAAK,CAACe;EAAY,CAAC;EACnE,OAAO;IAAEN,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAEV,KAAK,CAACW;EAAU,CAAC;AAClD,CAAC;;AAED;AACA,OAAO,MAAMK,iBAAiB,GAAId,MAAM,IAAK;EAC3C,IAAIe,SAAS,GAAG,CAAC;EACjB,IAAIf,MAAM,CAACgB,MAAM,GAAG,CAAC,EAAED,SAAS,IAAI,CAAC;EACrC,IAAIf,MAAM,CAACgB,MAAM,GAAG,CAAC,EAAED,SAAS,IAAI,CAAC;EACrC,IAAIhB,SAAS,CAACC,MAAM,CAAC,EAAEe,SAAS,IAAI,CAAC;EACrC,IAAIX,UAAU,CAACJ,MAAM,CAAC,EAAEe,SAAS,IAAI,CAAC;EACtC,IAAIZ,QAAQ,CAACH,MAAM,CAAC,EAAEe,SAAS,IAAI,CAAC;EACpC,OAAOA,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}