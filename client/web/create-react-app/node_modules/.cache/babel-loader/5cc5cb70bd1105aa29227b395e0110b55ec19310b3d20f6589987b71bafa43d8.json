{"ast":null,"code":"// assets\nimport { IconKey, IconPlaylist } from '@tabler/icons-react';\n// import config from '../config.json';\n\n// constant\nconst icons = {\n  IconKey,\n  IconPlaylist\n};\n\n// ==============================|| EXTRA PAGES MENU ITEMS ||============================== //\n\n示例的用户播放列表数据;\nconst userPlaylists = [{\n  id: 'playlist1',\n  title: 'Playlist 1',\n  url: 'playlists'\n}, {\n  id: 'playlist2',\n  title: 'Playlist 2',\n  url: 'playlists2'\n}\n// 可以根据需要添加更多的播放列表项\n];\n\n// 根据用户播放列表数据生成菜单项\nconst generatePlaylistMenuItems = () => {\n  return userPlaylists.map(playlist => ({\n    id: playlist.id,\n    title: playlist.title,\n    type: 'item',\n    url: playlist.url,\n    target: false\n  }));\n};\n\n// async function generatePlaylistMenuItems() {\n//   try {\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       console.error('Token is null');\n//       return [];\n//     }\n\n//     const requestOptions = {\n//       method: 'GET',\n//       headers: new Headers({\n//         'Authorization': `Bearer ${token}`,\n//         'Content-Type': 'application/json'\n//       }),\n//     };\n\n//     const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n\n//     if (!response.ok) {\n//       console.error('Failed to fetch playlists:', response.statusText);\n//       return [];\n//     }\n\n//     const userPlaylists = await response.json();\n\n//     if (!Array.isArray(userPlaylists)) {\n//       console.error('Playlists data is not an array');\n//       return [];\n//     }\n\n//     // 使用 map 的返回值，并直接返回它\n//     return userPlaylists.map((playlist) => ({\n//       id: playlist.playlist_id,\n//       title: playlist.name,\n//       type: 'item',\n//       url: `/playlist/${playlist.playlist_id}`,\n//       target: false\n//     }));\n\n//   } catch (error) {\n//     console.error('Error during fetching playlists:', error);\n//     return [];\n//   }\n// }\n\nconst pages = {\n  id: 'pages',\n  // title: 'PlayLists',\n  // caption: 'All Musics',\n  type: 'group',\n  children: [{\n    id: 'playlists',\n    title: 'Playlists',\n    type: 'collapse',\n    icon: icons.IconPlaylist,\n    children: []\n    // 使用动态生成的播放列表项\n  }, {\n    id: 'authentication',\n    title: 'Authentication',\n    type: 'collapse',\n    icon: icons.IconKey,\n    children: [{\n      id: 'login3',\n      title: 'Login',\n      type: 'item',\n      url: '/pages/login/login3',\n      target: true\n    }, {\n      id: 'register3',\n      title: 'Register',\n      type: 'item',\n      url: '/pages/register/register3',\n      target: true\n    }]\n  }]\n};\nexport default pages;","map":{"version":3,"names":["IconKey","IconPlaylist","icons","示例的用户播放列表数据","userPlaylists","id","title","url","generatePlaylistMenuItems","map","playlist","type","target","pages","children","icon"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/menu-items/pages.js"],"sourcesContent":["// assets\nimport { IconKey, IconPlaylist } from '@tabler/icons-react';\n// import config from '../config.json';\n\n// constant\nconst icons = {\n  IconKey, IconPlaylist\n};\n\n// ==============================|| EXTRA PAGES MENU ITEMS ||============================== //\n\n示例的用户播放列表数据\nconst userPlaylists = [\n  { id: 'playlist1', title: 'Playlist 1', url: 'playlists' },\n  { id: 'playlist2', title: 'Playlist 2', url: 'playlists2' },\n  // 可以根据需要添加更多的播放列表项\n];\n\n// 根据用户播放列表数据生成菜单项\nconst generatePlaylistMenuItems = () => {\n  return userPlaylists.map((playlist) => ({\n    id: playlist.id,\n    title: playlist.title,\n    type: 'item',\n    url: playlist.url,\n    target: false\n  }));\n};\n\n\n// async function generatePlaylistMenuItems() {\n//   try {\n//     const token = localStorage.getItem('token');\n//     if (!token) {\n//       console.error('Token is null');\n//       return [];\n//     }\n\n//     const requestOptions = {\n//       method: 'GET',\n//       headers: new Headers({\n//         'Authorization': `Bearer ${token}`,\n//         'Content-Type': 'application/json'\n//       }),\n//     };\n\n//     const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n\n//     if (!response.ok) {\n//       console.error('Failed to fetch playlists:', response.statusText);\n//       return [];\n//     }\n\n//     const userPlaylists = await response.json();\n\n//     if (!Array.isArray(userPlaylists)) {\n//       console.error('Playlists data is not an array');\n//       return [];\n//     }\n\n//     // 使用 map 的返回值，并直接返回它\n//     return userPlaylists.map((playlist) => ({\n//       id: playlist.playlist_id,\n//       title: playlist.name,\n//       type: 'item',\n//       url: `/playlist/${playlist.playlist_id}`,\n//       target: false\n//     }));\n\n//   } catch (error) {\n//     console.error('Error during fetching playlists:', error);\n//     return [];\n//   }\n// }\n\n\n\nconst pages = {\n  id: 'pages',\n  // title: 'PlayLists',\n  // caption: 'All Musics',\n  type: 'group',\n  children: [\n    {\n      id: 'playlists',\n      title: 'Playlists',\n      type: 'collapse',\n      icon: icons.IconPlaylist,\n      children:\n        []\n      // 使用动态生成的播放列表项\n    },\n\n    {\n      id: 'authentication',\n      title: 'Authentication',\n      type: 'collapse',\n      icon: icons.IconKey,\n\n      children: [\n        {\n          id: 'login3',\n          title: 'Login',\n          type: 'item',\n          url: '/pages/login/login3',\n          target: true\n        },\n        {\n          id: 'register3',\n          title: 'Register',\n          type: 'item',\n          url: '/pages/register/register3',\n          target: true\n        }\n      ]\n    },\n  ]\n};\n\n\n\nexport default pages;\n"],"mappings":"AAAA;AACA,SAASA,OAAO,EAAEC,YAAY,QAAQ,qBAAqB;AAC3D;;AAEA;AACA,MAAMC,KAAK,GAAG;EACZF,OAAO;EAAEC;AACX,CAAC;;AAED;;AAEAE,WAAW;AACX,MAAMC,aAAa,GAAG,CACpB;EAAEC,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAY,CAAC,EAC1D;EAAEF,EAAE,EAAE,WAAW;EAAEC,KAAK,EAAE,YAAY;EAAEC,GAAG,EAAE;AAAa;AAC1D;AAAA,CACD;;AAED;AACA,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EACtC,OAAOJ,aAAa,CAACK,GAAG,CAAEC,QAAQ,KAAM;IACtCL,EAAE,EAAEK,QAAQ,CAACL,EAAE;IACfC,KAAK,EAAEI,QAAQ,CAACJ,KAAK;IACrBK,IAAI,EAAE,MAAM;IACZJ,GAAG,EAAEG,QAAQ,CAACH,GAAG;IACjBK,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AACL,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,KAAK,GAAG;EACZR,EAAE,EAAE,OAAO;EACX;EACA;EACAM,IAAI,EAAE,OAAO;EACbG,QAAQ,EAAE,CACR;IACET,EAAE,EAAE,WAAW;IACfC,KAAK,EAAE,WAAW;IAClBK,IAAI,EAAE,UAAU;IAChBI,IAAI,EAAEb,KAAK,CAACD,YAAY;IACxBa,QAAQ,EACN;IACF;EACF,CAAC,EAED;IACET,EAAE,EAAE,gBAAgB;IACpBC,KAAK,EAAE,gBAAgB;IACvBK,IAAI,EAAE,UAAU;IAChBI,IAAI,EAAEb,KAAK,CAACF,OAAO;IAEnBc,QAAQ,EAAE,CACR;MACET,EAAE,EAAE,QAAQ;MACZC,KAAK,EAAE,OAAO;MACdK,IAAI,EAAE,MAAM;MACZJ,GAAG,EAAE,qBAAqB;MAC1BK,MAAM,EAAE;IACV,CAAC,EACD;MACEP,EAAE,EAAE,WAAW;MACfC,KAAK,EAAE,UAAU;MACjBK,IAAI,EAAE,MAAM;MACZJ,GAAG,EAAE,2BAA2B;MAChCK,MAAM,EAAE;IACV,CAAC;EAEL,CAAC;AAEL,CAAC;AAID,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}