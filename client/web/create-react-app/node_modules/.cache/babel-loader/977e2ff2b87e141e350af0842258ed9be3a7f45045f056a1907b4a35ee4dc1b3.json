{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/album/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Card, CardActionArea, CardMedia, Collapse, List, ListItem, ListItemText, Typography } from '@mui/material';\n\n// 假设这是你的专辑数据\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst albums = [{\n  id: 1,\n  title: 'Album 1',\n  cover: 'cover1.jpg',\n  songs: ['Song 1', 'Song 2', 'Song 3']\n}, {\n  id: 2,\n  title: 'Album 2',\n  cover: 'cover2.jpg',\n  songs: ['Song 4', 'Song 5', 'Song 6']\n}, {\n  id: 3,\n  title: 'Album 3',\n  cover: 'cover3.jpg',\n  songs: ['Song 7', 'Song 8', 'Song 9']\n}, {\n  id: 4,\n  title: 'Album 4',\n  cover: 'cover4.jpg',\n  songs: ['Song 10', 'Song 11', 'Song 12']\n}, {\n  id: 5,\n  title: 'Album 5',\n  cover: 'cover5.jpg',\n  songs: ['Song 13', 'Song 14', 'Song 15']\n}\n// 其他专辑...\n];\nconst AlbumPage = () => {\n  _s();\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const handleAlbumClick = album => {\n    setSelectedAlbum(selectedAlbum === album ? null : album);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          style: {\n            padding: '20px'\n          },\n          children: \"All Albums\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          style: {\n            padding: '20px'\n          },\n          children: albums.map(album => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                onClick: () => handleAlbumClick(album),\n                children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                  component: \"img\",\n                  height: \"350\",\n                  image: album.cover,\n                  alt: album.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: selectedAlbum === album,\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(List, {\n                style: {\n                  width: '100%',\n                  paddingLeft: 0\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: album.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 21\n                }, this), album.songs.map((song, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: song\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, album.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumPage, \"8DhJSHHv76fFCsRk5KaRfGTJTDU=\");\n_c = AlbumPage;\nexport default AlbumPage;\nvar _c;\n$RefreshReg$(_c, \"AlbumPage\");","map":{"version":3,"names":["React","useState","Grid","Card","CardActionArea","CardMedia","Collapse","List","ListItem","ListItemText","Typography","jsxDEV","_jsxDEV","albums","id","title","cover","songs","AlbumPage","_s","selectedAlbum","setSelectedAlbum","handleAlbumClick","album","container","spacing","children","item","xs","variant","style","padding","fileName","_jsxFileName","lineNumber","columnNumber","map","sm","md","onClick","component","height","image","alt","in","width","paddingLeft","primary","song","index","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/album/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Card, CardActionArea, CardMedia, Collapse, List, ListItem, ListItemText, Typography } from '@mui/material';\n\n// 假设这是你的专辑数据\nconst albums = [\n  { id: 1, title: 'Album 1', cover: 'cover1.jpg', songs: ['Song 1', 'Song 2', 'Song 3'] },\n  { id: 2, title: 'Album 2', cover: 'cover2.jpg', songs: ['Song 4', 'Song 5', 'Song 6'] },\n  { id: 3, title: 'Album 3', cover: 'cover3.jpg', songs: ['Song 7', 'Song 8', 'Song 9']},\n  { id: 4, title: 'Album 4', cover: 'cover4.jpg', songs: ['Song 10', 'Song 11', 'Song 12']},\n  { id: 5, title: 'Album 5', cover: 'cover5.jpg', songs: ['Song 13', 'Song 14', 'Song 15']},\n  // 其他专辑...\n];\n\nconst AlbumPage = () => {\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n\n  const handleAlbumClick = (album) => {\n    setSelectedAlbum(selectedAlbum === album ? null : album);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Card>\n          <Typography variant=\"h2\" style={{ padding: '20px' }}>All Albums</Typography>\n          <Grid container spacing={2} style={{ padding: '20px' }}>\n            {albums.map((album) => (\n              <Grid item xs={6} sm={4} md={3} key={album.id}>\n                <Card>\n                  <CardActionArea onClick={() => handleAlbumClick(album)}>\n                    <CardMedia component=\"img\" height=\"350\" image={album.cover} alt={album.title} />\n                  </CardActionArea>\n                </Card>\n                <Collapse in={selectedAlbum === album} style={{ width: '100%' }}>\n                  <List style={{ width: '100%', paddingLeft: 0 }}>\n                    <ListItem>\n                      <ListItemText primary={album.title} />\n                    </ListItem>\n                    {album.songs.map((song, index) => (\n                      <ListItem key={index}>\n                        <ListItemText primary={song} />\n                      </ListItem>\n                    ))}\n                  </List>\n                </Collapse>\n              </Grid>\n            ))}\n          </Grid>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AlbumPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}