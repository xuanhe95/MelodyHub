{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/views/pages/playlists/MusicTable.js\";\nimport React from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography, Avatar } from '@mui/material';\n\n// const musicList = [\n//   { title: 'Song 1', artist: 'Artist 1', album: 'Album 1', duration: '3:45' },\n//   { title: 'Song 2', artist: 'Artist 2', album: 'Album 2', duration: '4:20' },\n//   { title: 'Song 3', artist: 'Artist 3', album: 'Album 3', duration: '2:58' },\n//   { title: 'Song 4', artist: 'Artist 4', album: 'Album 4', duration: '5:12' },\n//   { title: 'Song 5', artist: 'Artist 5', album: 'Album 5', duration: '3:30' }\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicTable = () => {\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Album\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: playlist.map((music, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 1,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            alt: music.title,\n            src: \"/path/to/music-icon.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: music.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 1,\n          children: music.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 1,\n          children: music.album\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: music.duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = MusicTable;\nexport default MusicTable;\nvar _c;\n$RefreshReg$(_c, \"MusicTable\");","map":{"version":3,"names":["React","Table","TableHead","TableBody","TableRow","TableCell","Typography","Avatar","jsxDEV","_jsxDEV","MusicTable","children","colSpan","variant","fileName","_jsxFileName","lineNumber","columnNumber","playlist","map","music","index","alt","title","src","artist","album","duration","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/views/pages/playlists/MusicTable.js"],"sourcesContent":["import React from 'react';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Typography, Avatar } from '@mui/material';\n\n// const musicList = [\n//   { title: 'Song 1', artist: 'Artist 1', album: 'Album 1', duration: '3:45' },\n//   { title: 'Song 2', artist: 'Artist 2', album: 'Album 2', duration: '4:20' },\n//   { title: 'Song 3', artist: 'Artist 3', album: 'Album 3', duration: '2:58' },\n//   { title: 'Song 4', artist: 'Artist 4', album: 'Album 4', duration: '5:12' },\n//   { title: 'Song 5', artist: 'Artist 5', album: 'Album 5', duration: '3:30' }\n// ];\n\nconst MusicTable = () => {\n  return (\n    <Table>\n      {/* 表头 */}\n      <TableHead>\n        <TableRow>\n          <TableCell colSpan={1}>\n            <Typography variant=\"h3\">Track</Typography>\n          </TableCell>\n          <TableCell colSpan={1}>\n            <Typography variant=\"h3\">Artist</Typography>\n          </TableCell>\n          <TableCell colSpan={1}>\n            <Typography variant=\"h3\">Album</Typography>\n          </TableCell>\n          <TableCell>\n            <Typography variant=\"h3\">Duration</Typography>\n          </TableCell>\n        </TableRow>\n      </TableHead>\n\n      {/* 表格内容 */}\n      <TableBody>\n        {playlist.map((music, index) => (\n          <TableRow key={index}>\n            <TableCell colSpan={1}>\n              <Avatar alt={music.title} src=\"/path/to/music-icon.jpg\" />\n              <Typography variant=\"body1\">{music.title}</Typography>\n            </TableCell>\n            <TableCell colSpan={1}>{music.artist}</TableCell>\n            <TableCell colSpan={1}>{music.album}</TableCell>\n            <TableCell>{music.duration}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\nexport default MusicTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}