{"ast":null,"code":"// assets\nimport { IconKey, IconPlaylist } from '@tabler/icons-react';\nimport config from '../config.json';\n\n// constant\nconst icons = {\n  IconKey,\n  IconPlaylist\n};\n\n// ==============================|| EXTRA PAGES MENU ITEMS ||============================== //\n\n// 示例的用户播放列表数据\n// const userPlaylists = [\n//   { id: 'playlist1', title: 'Playlist 1', url: 'playlists' },\n//   { id: 'playlist2', title: 'Playlist 2', url: 'playlists2' },\n//   // 可以根据需要添加更多的播放列表项\n// ];\n\n// // 根据用户播放列表数据生成菜单项\n// const generatePlaylistMenuItems = () => {\n//   return userPlaylists.map((playlist) => ({\n//     id: playlist.id,\n//     title: playlist.title,\n//     type: 'item',\n//     url: playlist.url,\n//     target: false\n//   }));\n// };\n\nconst getItem = () => {\n  return {\n    id: 'playlists',\n    title: 'Playlists',\n    type: 'collapse',\n    icon: icons.IconPlaylist,\n    children: function () {\n      (async () => {\n        const items = await generatePlaylistMenuItems();\n        // 使用items做一些操作\n      })();\n    }()\n  };\n};\nasync function generatePlaylistMenuItems() {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token is null');\n      return [];\n    }\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n    if (!response.ok) {\n      console.error('Failed to fetch playlists:', response.statusText);\n      return [];\n    }\n    const userPlaylists = await response.json();\n    if (!Array.isArray(userPlaylists)) {\n      console.error('Playlists data is not an array');\n      return [];\n    }\n\n    // 使用 map 的返回值，并直接返回它\n    return userPlaylists.map(playlist => ({\n      id: playlist.playlist_id,\n      title: playlist.name,\n      type: 'item',\n      url: `/playlist/${playlist.playlist_id}`,\n      target: false\n    }));\n  } catch (error) {\n    console.error('Error during fetching playlists:', error);\n    return [];\n  }\n}\nconst pages = {\n  id: 'pages',\n  // title: 'PlayLists',\n  // caption: 'All Musics',\n  type: 'group',\n  children: [{\n    id: 'playlists',\n    title: 'Playlists',\n    type: 'collapse',\n    icon: icons.IconPlaylist,\n    children: getItem()\n    // 使用动态生成的播放列表项\n  }, {\n    id: 'authentication',\n    title: 'Authentication',\n    type: 'collapse',\n    icon: icons.IconKey,\n    children: [{\n      id: 'login3',\n      title: 'Login',\n      type: 'item',\n      url: '/pages/login/login3',\n      target: true\n    }, {\n      id: 'register3',\n      title: 'Register',\n      type: 'item',\n      url: '/pages/register/register3',\n      target: true\n    }]\n  }]\n};\nexport default pages;","map":{"version":3,"names":["IconKey","IconPlaylist","config","icons","getItem","id","title","type","icon","children","items","generatePlaylistMenuItems","token","localStorage","console","error","requestOptions","method","headers","Headers","response","fetch","server_host","server_port","ok","statusText","userPlaylists","json","Array","isArray","map","playlist","playlist_id","name","url","target","pages"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/menu-items/pages.js"],"sourcesContent":["// assets\nimport { IconKey, IconPlaylist } from '@tabler/icons-react';\nimport config from '../config.json';\n\n// constant\nconst icons = {\n  IconKey, IconPlaylist\n};\n\n// ==============================|| EXTRA PAGES MENU ITEMS ||============================== //\n\n// 示例的用户播放列表数据\n// const userPlaylists = [\n//   { id: 'playlist1', title: 'Playlist 1', url: 'playlists' },\n//   { id: 'playlist2', title: 'Playlist 2', url: 'playlists2' },\n//   // 可以根据需要添加更多的播放列表项\n// ];\n\n// // 根据用户播放列表数据生成菜单项\n// const generatePlaylistMenuItems = () => {\n//   return userPlaylists.map((playlist) => ({\n//     id: playlist.id,\n//     title: playlist.title,\n//     type: 'item',\n//     url: playlist.url,\n//     target: false\n//   }));\n// };\n\nconst getItem = () => {\n  return {\n    id: 'playlists',\n    title: 'Playlists',\n    type: 'collapse',\n    icon: icons.IconPlaylist,\n    children:\n      (function () {\n        (async () => {\n          const items = await generatePlaylistMenuItems();\n          // 使用items做一些操作\n        })();\n      })()\n\n  };\n}\n\nasync function generatePlaylistMenuItems() {\n  try {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error('Token is null');\n      return [];\n    }\n\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }),\n    };\n\n    const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n\n    if (!response.ok) {\n      console.error('Failed to fetch playlists:', response.statusText);\n      return [];\n    }\n\n    const userPlaylists = await response.json();\n\n    if (!Array.isArray(userPlaylists)) {\n      console.error('Playlists data is not an array');\n      return [];\n    }\n\n    // 使用 map 的返回值，并直接返回它\n    return userPlaylists.map((playlist) => ({\n      id: playlist.playlist_id,\n      title: playlist.name,\n      type: 'item',\n      url: `/playlist/${playlist.playlist_id}`,\n      target: false\n    }));\n\n  } catch (error) {\n    console.error('Error during fetching playlists:', error);\n    return [];\n  }\n}\n\n\n\nconst pages = {\n  id: 'pages',\n  // title: 'PlayLists',\n  // caption: 'All Musics',\n  type: 'group',\n  children: [\n    {\n      id: 'playlists',\n      title: 'Playlists',\n      type: 'collapse',\n      icon: icons.IconPlaylist,\n      children:\n        getItem()\n      // 使用动态生成的播放列表项\n    },\n\n    {\n      id: 'authentication',\n      title: 'Authentication',\n      type: 'collapse',\n      icon: icons.IconKey,\n\n      children: [\n        {\n          id: 'login3',\n          title: 'Login',\n          type: 'item',\n          url: '/pages/login/login3',\n          target: true\n        },\n        {\n          id: 'register3',\n          title: 'Register',\n          type: 'item',\n          url: '/pages/register/register3',\n          target: true\n        }\n      ]\n    },\n  ]\n};\n\n\n\nexport default pages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}