{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/albums/MusicList.js\";\nimport React from 'react';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography, Divider } from '@mui/material';\n\n// 音乐列表数据\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst musicList = [{\n  title: 'Song 1',\n  artist: 'Artist 1',\n  album: 'Album 1',\n  duration: '3:45'\n}, {\n  title: 'Song 2',\n  artist: 'Artist 2',\n  album: 'Album 2',\n  duration: '4:20'\n}, {\n  title: 'Song 3',\n  artist: 'Artist 3',\n  album: 'Album 3',\n  duration: '2:58'\n}];\nconst MusicList = () => {\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 20\n        }, this),\n        secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Artist \\u2014 Album \\u2014 Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), musicList.map((music, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: music.title,\n            src: \"/path/to/music-avatar.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: music.title,\n          secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"span\",\n              variant: \"body2\",\n              color: \"textPrimary\",\n              children: music.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this), ` — ${music.album} — ${music.duration}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), index < musicList.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"inset\",\n        component: \"li\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 44\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = MusicList;\nexport default MusicList;\nvar _c;\n$RefreshReg$(_c, \"MusicList\");","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemAvatar","Avatar","Typography","Divider","jsxDEV","_jsxDEV","musicList","title","artist","album","duration","MusicList","children","primary","variant","fileName","_jsxFileName","lineNumber","columnNumber","secondary","Fragment","map","music","index","alignItems","alt","src","component","color","length","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/albums/MusicList.js"],"sourcesContent":["import React from 'react';\nimport { List, ListItem, ListItemText, ListItemAvatar, Avatar, Typography, Divider } from '@mui/material';\n\n// 音乐列表数据\nconst musicList = [\n  { title: 'Song 1', artist: 'Artist 1', album: 'Album 1', duration: '3:45' },\n  { title: 'Song 2', artist: 'Artist 2', album: 'Album 2', duration: '4:20' },\n  { title: 'Song 3', artist: 'Artist 3', album: 'Album 3', duration: '2:58' },\n];\n\nconst MusicList = () => {\n  return (\n    <List>\n      {/* 表头 */}\n      <ListItem>\n        <ListItemText\n          primary={<Typography variant=\"subtitle1\">Title</Typography>}\n          secondary={\n            <React.Fragment>\n              <Typography variant=\"body2\">Artist — Album — Duration</Typography>\n            </React.Fragment>\n          }\n        />\n      </ListItem>\n      {/* 音乐列表 */}\n      {musicList.map((music, index) => (\n        <React.Fragment key={index}>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Avatar alt={music.title} src=\"/path/to/music-avatar.jpg\" />\n            </ListItemAvatar>\n            <ListItemText\n              primary={music.title}\n              secondary={\n                <React.Fragment>\n                  <Typography component=\"span\" variant=\"body2\" color=\"textPrimary\">\n                    {music.artist}\n                  </Typography>\n                  {` — ${music.album} — ${music.duration}`}\n                </React.Fragment>\n              }\n            />\n          </ListItem>\n          {index < musicList.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\n        </React.Fragment>\n      ))}\n    </List>\n  );\n};\n\nexport default MusicList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}