{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/dashboard/Default/TotalGrowthBarChart.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst status = [{\n  value: 'today',\n  label: 'Today'\n}, {\n  value: 'month',\n  label: 'This Month'\n}, {\n  value: 'year',\n  label: 'This Year'\n}];\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = ({\n  isLoading\n}) => {\n  _s();\n  const [value, setValue] = useState('today');\n  const theme = useTheme();\n  const customization = useSelector(state => state.customization);\n  const {\n    navType\n  } = customization;\n  const {\n    primary\n  } = theme.palette.text;\n  const darkLight = theme.palette.dark.light;\n  const grey200 = theme.palette.grey[200];\n  const grey500 = theme.palette.grey[500];\n  const primary200 = theme.palette.primary[200];\n  const primaryDark = theme.palette.primary.dark;\n  const secondaryMain = theme.palette.secondary.main;\n  const secondaryLight = theme.palette.secondary.light;\n  useEffect(() => {\n    const newChartData = {\n      ...chartData.options,\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: grey200\n      },\n      tooltip: {\n        theme: 'light'\n      },\n      legend: {\n        labels: {\n          colors: grey500\n        }\n      }\n    };\n\n    // do not load chart when loading\n    if (!isLoading) {\n      ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n    }\n  }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonTotalGrowthBarChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(MainCard, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: gridSpacing,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    children: \"Total Growth\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h3\",\n                    children: \"$2,324.00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"standard-select-currency\",\n                select: true,\n                value: value,\n                onChange: e => setValue(e.target.value),\n                children: status.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            ...chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(TotalGrowthBarChart, \"OSbiZjGarYswQUODDglX7INXK0Y=\", false, function () {\n  return [useTheme, useSelector];\n});\n_c = TotalGrowthBarChart;\nTotalGrowthBarChart.propTypes = {\n  isLoading: PropTypes.bool\n};\nexport default TotalGrowthBarChart;\nvar _c;\n$RefreshReg$(_c, \"TotalGrowthBarChart\");","map":{"version":3,"names":["PropTypes","useState","useEffect","useSelector","useTheme","Grid","MenuItem","TextField","Typography","ApexCharts","Chart","SkeletonTotalGrowthBarChart","MainCard","gridSpacing","chartData","jsxDEV","_jsxDEV","Fragment","_Fragment","status","value","label","TotalGrowthBarChart","isLoading","_s","setValue","theme","customization","state","navType","primary","palette","text","darkLight","dark","light","grey200","grey","grey500","primary200","primaryDark","secondaryMain","secondary","main","secondaryLight","newChartData","options","colors","xaxis","labels","style","yaxis","grid","borderColor","tooltip","legend","exec","children","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","alignItems","justifyContent","direction","variant","id","select","onChange","e","target","map","option","_c","propTypes","bool","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/dashboard/Default/TotalGrowthBarChart.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Grid, MenuItem, TextField, Typography } from '@mui/material';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from 'ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from 'ui-component/cards/MainCard';\nimport { gridSpacing } from 'store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n  {\n    value: 'today',\n    label: 'Today'\n  },\n  {\n    value: 'month',\n    label: 'This Month'\n  },\n  {\n    value: 'year',\n    label: 'This Year'\n  }\n];\n\n// ==============================|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||============================== //\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n  const [value, setValue] = useState('today');\n  const theme = useTheme();\n  const customization = useSelector((state) => state.customization);\n\n  const { navType } = customization;\n  const { primary } = theme.palette.text;\n  const darkLight = theme.palette.dark.light;\n  const grey200 = theme.palette.grey[200];\n  const grey500 = theme.palette.grey[500];\n\n  const primary200 = theme.palette.primary[200];\n  const primaryDark = theme.palette.primary.dark;\n  const secondaryMain = theme.palette.secondary.main;\n  const secondaryLight = theme.palette.secondary.light;\n\n  useEffect(() => {\n    const newChartData = {\n      ...chartData.options,\n      colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n      xaxis: {\n        labels: {\n          style: {\n            colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: [primary]\n          }\n        }\n      },\n      grid: {\n        borderColor: grey200\n      },\n      tooltip: {\n        theme: 'light'\n      },\n      legend: {\n        labels: {\n          colors: grey500\n        }\n      }\n    };\n\n    // do not load chart when loading\n    if (!isLoading) {\n      ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n    }\n  }, [navType, primary200, primaryDark, secondaryMain, secondaryLight, primary, darkLight, grey200, isLoading, grey500]);\n\n  return (\n    <>\n      {isLoading ? (\n        <SkeletonTotalGrowthBarChart />\n      ) : (\n        <MainCard>\n          <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n              <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                <Grid item>\n                  <Grid container direction=\"column\" spacing={1}>\n                    <Grid item>\n                      <Typography variant=\"subtitle2\">Total Growth</Typography>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"h3\">$2,324.00</Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <TextField id=\"standard-select-currency\" select value={value} onChange={(e) => setValue(e.target.value)}>\n                    {status.map((option) => (\n                      <MenuItem key={option.value} value={option.value}>\n                        {option.label}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs={12}>\n              <Chart {...chartData} />\n            </Grid>\n          </Grid>\n        </MainCard>\n      )}\n    </>\n  );\n};\n\nTotalGrowthBarChart.propTypes = {\n  isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}