{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/layout/MainLayout/Sidebar/MenuList/index.js\",\n  _s = $RefreshSig$();\n// material-ui\nimport { Typography } from '@mui/material';\n\n// project imports\nimport NavGroup from './NavGroup';\nimport menuItem from 'menu-items';\nimport config from '../../../../config.json';\nimport { useEffect, useState } from 'react';\n\n// ==============================|| SIDEBAR MENU LIST ||============================== //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function generatePlaylistMenuItems() {\n  try {\n    const tokenObj = JSON.parse(localStorage.getItem('token'));\n    const token = tokenObj === null || tokenObj === void 0 ? void 0 : tokenObj.token;\n    if (!token) {\n      console.error('Token is null');\n      return [];\n    }\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n    if (!response.ok) {\n      console.error('Failed to fetch playlists:', response.statusText);\n      return [];\n    }\n    const userPlaylists = await response.json();\n    if (!Array.isArray(userPlaylists)) {\n      console.error('Playlists data is not an array');\n      return [];\n    }\n\n    // 使用 map 的返回值，并直接返回它\n    return userPlaylists.map(playlist => ({\n      id: playlist.playlist_id,\n      title: playlist.name,\n      type: 'item',\n      url: `/playlists/${playlist.playlist_id}`,\n      target: false\n    }));\n  } catch (error) {\n    console.error('Error during fetching playlists:', error);\n    return [];\n  }\n}\nconst MenuList = () => {\n  _s();\n  const [menuItems, setMenuItems] = useState(menuItem);\n  useEffect(() => {\n    const updatePlaylistItems = async () => {\n      const items = await generatePlaylistMenuItems();\n      // Creating a new menuItem object, updating the relevant part with fetched data\n      const updatedMenuItems = {\n        ...menuItems,\n        items: menuItems.items.map(item => {\n          console.log(item.id);\n          if (item.id === 'pages') {\n            return {\n              ...item,\n              children: item.children.map(child => {\n                if (child.id === 'playlists') {\n                  console.log('Updating playlists');\n                  return {\n                    ...child,\n                    children: items\n                  };\n                } else {\n                  return child;\n                }\n              })\n            };\n          } else {\n            return item;\n          }\n        })\n      };\n      setMenuItems(updatedMenuItems); // Update state with the modified menu structure\n    };\n    updatePlaylistItems();\n  }, []);\n\n  // console.log(playlistItems);\n  console.log(menuItems);\n  // menuItem.items[1].children[0].children[1] = {\n  //   id: 'login32',\n  //   title: 'Login',\n  //   type: 'item',\n  //   url: '/pages/login/login3',\n  //   target: true\n  // }\n  console.log(menuItems.items[1].children[0].children);\n  const navItems = menuItem.items.map(item => {\n    switch (item.type) {\n      case 'group':\n        return /*#__PURE__*/_jsxDEV(NavGroup, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          align: \"left\",\n          children: \"Menu Items Error\"\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: navItems\n  }, void 0, false);\n};\n_s(MenuList, \"nNY0d8kT0f2kHyuk6/YMfb2sztU=\");\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["Typography","NavGroup","menuItem","config","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","generatePlaylistMenuItems","tokenObj","JSON","parse","localStorage","getItem","token","console","error","requestOptions","method","headers","Headers","response","fetch","server_host","server_port","ok","statusText","userPlaylists","json","Array","isArray","map","playlist","id","playlist_id","title","name","type","url","target","MenuList","_s","menuItems","setMenuItems","updatePlaylistItems","items","updatedMenuItems","item","log","children","child","navItems","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","align","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/layout/MainLayout/Sidebar/MenuList/index.js"],"sourcesContent":["// material-ui\nimport { Typography } from '@mui/material';\n\n// project imports\nimport NavGroup from './NavGroup';\nimport menuItem from 'menu-items';\n\nimport config from '../../../../config.json';\nimport { useEffect, useState } from 'react';\n\n// ==============================|| SIDEBAR MENU LIST ||============================== //\n\n\n\n\nasync function generatePlaylistMenuItems() {\n  try {\n    const tokenObj = JSON.parse(localStorage.getItem('token'));\n    const token = tokenObj?.token;\n\n    if (!token) {\n      console.error('Token is null');\n      return [];\n    }\n\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }),\n    };\n\n    const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n\n    if (!response.ok) {\n      console.error('Failed to fetch playlists:', response.statusText);\n      return [];\n    }\n\n    const userPlaylists = await response.json();\n\n    if (!Array.isArray(userPlaylists)) {\n      console.error('Playlists data is not an array');\n      return [];\n    }\n\n    // 使用 map 的返回值，并直接返回它\n    return userPlaylists.map((playlist) => ({\n      id: playlist.playlist_id,\n      title: playlist.name,\n      type: 'item',\n      url: `/playlists/${playlist.playlist_id}`,\n      target: false\n    }));\n\n  } catch (error) {\n    console.error('Error during fetching playlists:', error);\n    return [];\n  }\n}\n\n\n\nconst MenuList = () => {\n\n  const [menuItems, setMenuItems] = useState(menuItem);\n\n  useEffect(() => {\n    const updatePlaylistItems = async () => {\n      const items = await generatePlaylistMenuItems();\n      // Creating a new menuItem object, updating the relevant part with fetched data\n      const updatedMenuItems = {\n        ...menuItems,\n        items: menuItems.items.map(item => {\n          console.log(item.id);\n          if (item.id === 'pages') {\n\n            return {\n              ...item,\n              children: item.children.map(child => {\n                if (child.id === 'playlists') {\n                  console.log('Updating playlists');\n                  return {\n                    ...child,\n                    children: items\n                  };\n                } else {\n                  return child;\n                }\n              })\n            };\n          } else {\n            return item;\n          }\n        }\n        )\n      };\n\n      setMenuItems(updatedMenuItems); // Update state with the modified menu structure\n    };\n\n    updatePlaylistItems();\n  }, []);\n\n\n  // console.log(playlistItems);\n  console.log(menuItems)\n  // menuItem.items[1].children[0].children[1] = {\n  //   id: 'login32',\n  //   title: 'Login',\n  //   type: 'item',\n  //   url: '/pages/login/login3',\n  //   target: true\n  // }\n  console.log(menuItems.items[1].children[0].children);\n\n\n\n  const navItems = menuItem.items.map((item) => {\n    switch (item.type) {\n      case 'group':\n        return <NavGroup key={item.id} item={item} />;\n      default:\n        return (\n          <Typography key={item.id} variant=\"h6\" color=\"error\" align=\"left\">\n            Menu Items Error\n          </Typography>\n        );\n    }\n  });\n\n  return <>{navItems}</>;\n};\n\nexport default MenuList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}