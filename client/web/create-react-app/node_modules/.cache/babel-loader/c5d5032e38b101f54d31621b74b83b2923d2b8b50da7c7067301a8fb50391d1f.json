{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/album/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Card, CardActionArea, CardMedia, Collapse, List, ListItem, ListItemText } from '@mui/material';\n\n// 假设这是你的专辑数据\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst albums = [{\n  id: 1,\n  title: 'Album 1',\n  cover: 'cover1.jpg',\n  songs: ['Song 1', 'Song 2', 'Song 3']\n}, {\n  id: 2,\n  title: 'Album 2',\n  cover: 'cover2.jpg',\n  songs: ['Song 4', 'Song 5', 'Song 6']\n}, {\n  id: 3,\n  title: 'Album 3',\n  cover: 'cover3.jpg',\n  songs: ['Song 7', 'Song 8', 'Song 9']\n}, {\n  id: 4,\n  title: 'Album 4',\n  cover: 'cover4.jpg',\n  songs: ['Song 10', 'Song 11', 'Song 12']\n}, {\n  id: 5,\n  title: 'Album 5',\n  cover: 'cover5.jpg',\n  songs: ['Song 13', 'Song 14', 'Song 15']\n}\n// 其他专辑...\n];\nconst AlbumPage = () => {\n  _s();\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n  const handleAlbumClick = album => {\n    setSelectedAlbum(selectedAlbum === album ? null : album);\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: albums.map((album, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: index % 4 === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            in: selectedAlbum === currentAlbum,\n            children: [0, 1, 2, 3].map(i => {\n              const albumIndex = index + i;\n              const currentAlbum = albums[albumIndex];\n              if (!currentAlbum) return null;\n              return /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 3,\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                    onClick: () => handleAlbumClick(currentAlbum),\n                    children: /*#__PURE__*/_jsxDEV(CardMedia, {\n                      component: \"img\",\n                      height: \"350\",\n                      image: currentAlbum.cover,\n                      alt: currentAlbum.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 37,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(List, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: currentAlbum.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 43,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 27\n                  }, this), currentAlbum.songs.map((song, songIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: song\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 31\n                    }, this)\n                  }, songIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 25\n                }, this)]\n              }, currentAlbum.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, album.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AlbumPage, \"8DhJSHHv76fFCsRk5KaRfGTJTDU=\");\n_c = AlbumPage;\nexport default AlbumPage;\nvar _c;\n$RefreshReg$(_c, \"AlbumPage\");","map":{"version":3,"names":["React","useState","Grid","Card","CardActionArea","CardMedia","Collapse","List","ListItem","ListItemText","jsxDEV","_jsxDEV","albums","id","title","cover","songs","AlbumPage","_s","selectedAlbum","setSelectedAlbum","handleAlbumClick","album","container","spacing","children","map","index","Fragment","item","xs","in","currentAlbum","i","albumIndex","sm","md","onClick","component","height","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","primary","song","songIndex","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/berry-free-react-admin-template/create-react-app/src/views/pages/album/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Card, CardActionArea, CardMedia, Collapse, List, ListItem, ListItemText } from '@mui/material';\n\n// 假设这是你的专辑数据\nconst albums = [\n  { id: 1, title: 'Album 1', cover: 'cover1.jpg', songs: ['Song 1', 'Song 2', 'Song 3'] },\n  { id: 2, title: 'Album 2', cover: 'cover2.jpg', songs: ['Song 4', 'Song 5', 'Song 6'] },\n  { id: 3, title: 'Album 3', cover: 'cover3.jpg', songs: ['Song 7', 'Song 8', 'Song 9']},\n  { id: 4, title: 'Album 4', cover: 'cover4.jpg', songs: ['Song 10', 'Song 11', 'Song 12']},\n  { id: 5, title: 'Album 5', cover: 'cover5.jpg', songs: ['Song 13', 'Song 14', 'Song 15']},\n  // 其他专辑...\n];\n\nconst AlbumPage = () => {\n  const [selectedAlbum, setSelectedAlbum] = useState(null);\n\n  const handleAlbumClick = (album) => {\n    setSelectedAlbum(selectedAlbum === album ? null : album);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      {albums.map((album, index) => (\n        <React.Fragment key={album.id}>\n          {index % 4 === 0 && (\n            <Grid item xs={12}>\n              <Grid container spacing={2}>\n              <Collapse in={selectedAlbum === currentAlbum}>\n                {[0, 1, 2, 3].map((i) => {\n                  const albumIndex = index + i;\n                  const currentAlbum = albums[albumIndex];\n                  if (!currentAlbum) return null;\n                  return (\n                    <Grid item xs={12} sm={6} md={3} key={currentAlbum.id}>\n                      <Card>\n                        <CardActionArea onClick={() => handleAlbumClick(currentAlbum)}>\n                          <CardMedia component=\"img\" height=\"350\" image={currentAlbum.cover} alt={currentAlbum.title} />\n                        </CardActionArea>\n                      </Card>\n                      \n                        <List>\n                          <ListItem>\n                            <ListItemText primary={currentAlbum.title} />\n                          </ListItem>\n                          {currentAlbum.songs.map((song, songIndex) => (\n                            <ListItem key={songIndex}>\n                              <ListItemText primary={song} />\n                            </ListItem>\n                          ))}\n                        </List>\n                      \n                    </Grid>\n                  );\n                })}\n                </Collapse>\n              </Grid>\n              \n            </Grid>\n          )}\n        </React.Fragment>\n      ))}\n    </Grid>\n  );\n};\n\nexport default AlbumPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}