{"ast":null,"code":"var _jsxFileName = \"/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/layout/MainLayout/Sidebar/MenuList/index.js\",\n  _s = $RefreshSig$();\n// material-ui\nimport { Typography } from '@mui/material';\n\n// project imports\nimport NavGroup from './NavGroup';\nimport menuItem from 'menu-items';\nimport config from '../../../../config.json';\nimport { useEffect, useState } from 'react';\n\n// ==============================|| SIDEBAR MENU LIST ||============================== //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function generatePlaylistMenuItems() {\n  try {\n    const tokenObj = JSON.parse(localStorage.getItem('token'));\n    const token = tokenObj === null || tokenObj === void 0 ? void 0 : tokenObj.token;\n    if (!token) {\n      console.error('Token is null');\n      return [];\n    }\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      })\n    };\n    const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n    if (!response.ok) {\n      console.error('Failed to fetch playlists:', response.statusText);\n      return [];\n    }\n    const userPlaylists = await response.json();\n    if (!Array.isArray(userPlaylists)) {\n      console.error('Playlists data is not an array');\n      return [];\n    }\n\n    // 使用 map 的返回值，并直接返回它\n    return userPlaylists.map(playlist => ({\n      id: playlist.playlist_id,\n      title: playlist.name,\n      type: 'item',\n      url: `/playlists/${playlist.playlist_id}`,\n      target: false\n    }));\n  } catch (error) {\n    console.error('Error during fetching playlists:', error);\n    return [];\n  }\n}\nconst MenuList = () => {\n  _s();\n  useEffect(() => {\n    // 假设generatePlaylistMenuItems是一个异步函数，用于从后端获取播放列表数据\n    generatePlaylistMenuItems().then(items => {\n      // 创建一个新的 menuItem 对象，将获取的数据更新到相应位置\n      const updatedMenuItem = {\n        ...menuItem,\n        items: [...menuItem.items.slice(0, 1),\n        // 复制前面的子项\n        {\n          ...menuItem.items[1],\n          // 复制第二个子项\n          children: [{\n            ...menuItem.items[1].children[0],\n            // 复制第一个子子项\n            children: items // 将获取的数据更新到子子项中\n          }, ...menuItem.items[1].children.slice(1) // 复制其他子子项\n          ]\n        }, ...menuItem.items.slice(2) // 复制后面的子项\n        ]\n      };\n      setMenuItem(updatedMenuItem); // 使用更新后的 menuItem 更新状态\n    });\n  }, []);\n  console.log(playlistItems);\n  // menuItem.items[1].children[0].children[1] = {\n  //   id: 'login32',\n  //   title: 'Login',\n  //   type: 'item',\n  //   url: '/pages/login/login3',\n  //   target: true\n  // }\n  console.log(menuItem.items[1].children[0].children);\n  const navItems = menuItem.items.map(item => {\n    switch (item.type) {\n      case 'group':\n        return /*#__PURE__*/_jsxDEV(NavGroup, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          align: \"left\",\n          children: \"Menu Items Error\"\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: navItems\n  }, void 0, false);\n};\n_s(MenuList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MenuList;\nexport default MenuList;\nvar _c;\n$RefreshReg$(_c, \"MenuList\");","map":{"version":3,"names":["Typography","NavGroup","menuItem","config","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","generatePlaylistMenuItems","tokenObj","JSON","parse","localStorage","getItem","token","console","error","requestOptions","method","headers","Headers","response","fetch","server_host","server_port","ok","statusText","userPlaylists","json","Array","isArray","map","playlist","id","playlist_id","title","name","type","url","target","MenuList","_s","then","items","updatedMenuItem","slice","children","setMenuItem","log","playlistItems","navItems","item","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","align","_c","$RefreshReg$"],"sources":["/Users/xander/Documents/MCIT/MelodyTracker/client/web/create-react-app/src/layout/MainLayout/Sidebar/MenuList/index.js"],"sourcesContent":["// material-ui\nimport { Typography } from '@mui/material';\n\n// project imports\nimport NavGroup from './NavGroup';\nimport menuItem from 'menu-items';\n\nimport config from '../../../../config.json';\nimport { useEffect, useState } from 'react';\n\n// ==============================|| SIDEBAR MENU LIST ||============================== //\n\n\n\n\nasync function generatePlaylistMenuItems() {\n  try {\n    const tokenObj = JSON.parse(localStorage.getItem('token'));\n    const token = tokenObj?.token;\n\n    if (!token) {\n      console.error('Token is null');\n      return [];\n    }\n\n    const requestOptions = {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }),\n    };\n\n    const response = await fetch(`http://${config.server_host}:${config.server_port}/api/playlists`, requestOptions);\n\n    if (!response.ok) {\n      console.error('Failed to fetch playlists:', response.statusText);\n      return [];\n    }\n\n    const userPlaylists = await response.json();\n\n    if (!Array.isArray(userPlaylists)) {\n      console.error('Playlists data is not an array');\n      return [];\n    }\n\n    // 使用 map 的返回值，并直接返回它\n    return userPlaylists.map((playlist) => ({\n      id: playlist.playlist_id,\n      title: playlist.name,\n      type: 'item',\n      url: `/playlists/${playlist.playlist_id}`,\n      target: false\n    }));\n\n  } catch (error) {\n    console.error('Error during fetching playlists:', error);\n    return [];\n  }\n}\n\n\n\nconst MenuList = () => {\n\n  useEffect(() => {\n    // 假设generatePlaylistMenuItems是一个异步函数，用于从后端获取播放列表数据\n    generatePlaylistMenuItems().then(items => {\n      // 创建一个新的 menuItem 对象，将获取的数据更新到相应位置\n      const updatedMenuItem = {\n        ...menuItem,\n        items: [\n          ...menuItem.items.slice(0, 1), // 复制前面的子项\n          {\n            ...menuItem.items[1], // 复制第二个子项\n            children: [\n              {\n                ...menuItem.items[1].children[0], // 复制第一个子子项\n                children: items // 将获取的数据更新到子子项中\n              },\n              ...menuItem.items[1].children.slice(1) // 复制其他子子项\n            ]\n          },\n          ...menuItem.items.slice(2) // 复制后面的子项\n        ]\n      };\n\n      setMenuItem(updatedMenuItem); // 使用更新后的 menuItem 更新状态\n    });\n  }, []);\n\n\n  console.log(playlistItems);\n  // menuItem.items[1].children[0].children[1] = {\n  //   id: 'login32',\n  //   title: 'Login',\n  //   type: 'item',\n  //   url: '/pages/login/login3',\n  //   target: true\n  // }\n  console.log(menuItem.items[1].children[0].children);\n\n\n\n  const navItems = menuItem.items.map((item) => {\n    switch (item.type) {\n      case 'group':\n        return <NavGroup key={item.id} item={item} />;\n      default:\n        return (\n          <Typography key={item.id} variant=\"h6\" color=\"error\" align=\"left\">\n            Menu Items Error\n          </Typography>\n        );\n    }\n  });\n\n  return <>{navItems}</>;\n};\n\nexport default MenuList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}