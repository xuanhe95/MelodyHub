openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/XUANHE95/Database/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/XUANHE95/Database/1.0.0
  - url: /api
info:
  version: "1.0.0"
  title: Sample Password Flow OAuth2 Project
  description: >-
    This is an example of using OAuth2 Password Flow in a specification to
    describe security to your API.
security:
  - password:
      - read
      - write
      

  
paths:
  /login:
    post:
      summary: Login
      description: >-
        User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: OK
          
  /user:
    get:
      summary: Find a user
      
      responses:
        '200':
          description: OK
    post:
      summary: Create new user
      description: >-
        Create a new user.
      responses:
        '200':
         description: OK
         
    put:
      summary: Update user
      responses:
        '200':
          description: OK
          
    delete:
      summary: Delete user
      responses:
        '200':
          description: OK

  /songs:
    post:
      summary: Get songs by filter
      description: >-
        Get songs by filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string

      responses:
        '200':
          description: OK


         

         
components:
  securitySchemes:
    password:
      type: oauth2
      flows:
        password:
          tokenUrl: 'http://example.com/oauth/token'
          scopes:
            write: allows modifying resources
            read: allows reading resources
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        nickname:
          type: string
        email:
          type: string
        gender:
          type: boolean
        profile_img:
          type: string
        about_me:
          type: string
    song:
      type: object
      properties:
        id:
          type: string
        song_name:
          type: string
        album_id:
          type: string
        
